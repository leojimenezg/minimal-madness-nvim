local colors = require("minimal-madness.colors")

-- Treesitter highlight groups.
vim.api.nvim_set_hl(0, "@variable", { fg = colors.white })
vim.api.nvim_set_hl(0, "@variable.builtin", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@variable.parameter", { fg = colors.white })
vim.api.nvim_set_hl(0, "@variable.member", { fg = colors.white })
vim.api.nvim_set_hl(0, "@constant", { fg = colors.white })
vim.api.nvim_set_hl(0, "@constant.builtin", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@constant.macro", { fg = colors.white })
vim.api.nvim_set_hl(0, "@module", { fg = colors.white })
vim.api.nvim_set_hl(0, "@module.builtin", { fg = colors.white })
vim.api.nvim_set_hl(0, "@label", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@string", { fg = colors.green })
vim.api.nvim_set_hl(0, "@string.documentation", { fg = colors.grey })
vim.api.nvim_set_hl(0, "@string.regexp", { fg = colors.orange })
vim.api.nvim_set_hl(0, "@string.escape", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "@string.special", { fg = colors.green })
vim.api.nvim_set_hl(0, "@string.special.symbol", { fg = colors.white })
vim.api.nvim_set_hl(0, "@string.special.url", { fg = colors.blue })
vim.api.nvim_set_hl(0, "@string.special.path", { fg = colors.blue })
vim.api.nvim_set_hl(0, "@character", { fg = colors.green })
vim.api.nvim_set_hl(0, "@character.special", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "@boolean", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@number", { fg = colors.orange })
vim.api.nvim_set_hl(0, "@number.float", { fg = colors.orange })
vim.api.nvim_set_hl(0, "@type", { fg = colors.white })
vim.api.nvim_set_hl(0, "@type.builtin", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@type.definition", { fg = colors.white })
vim.api.nvim_set_hl(0, "@attribute", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@attribute.builtin", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@property", { fg = colors.white })
vim.api.nvim_set_hl(0, "@function", { fg = colors.white })
vim.api.nvim_set_hl(0, "@function.builtin", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@function.call", { fg = colors.white })
vim.api.nvim_set_hl(0, "@function.macro", { fg = colors.white })
vim.api.nvim_set_hl(0, "@function.method", { fg = colors.white })
vim.api.nvim_set_hl(0, "@function.method.call", { fg = colors.white })
vim.api.nvim_set_hl(0, "@constructor", { fg = colors.white })
vim.api.nvim_set_hl(0, "@operator", { fg = colors.white })
vim.api.nvim_set_hl(0, "@keyword", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.coroutine", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.function", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.operator", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.import", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.type", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.modifier", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.repeat", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.return", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.debug", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.exception", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.conditional", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.conditional.ternary", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.directive", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@keyword.directive.define", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@punctuation.delimiter", { fg = colors.white })
vim.api.nvim_set_hl(0, "@punctuation.bracket", { fg = colors.white })
vim.api.nvim_set_hl(0, "@punctuation.special", { fg = colors.white })
vim.api.nvim_set_hl(0, "@comment", { fg = colors.grey, italic = true })
vim.api.nvim_set_hl(0, "@comment.documentation", { fg = colors.grey, italic = true })
vim.api.nvim_set_hl(0, "@comment.error", { fg = colors.red })
vim.api.nvim_set_hl(0, "@comment.warning", { fg = colors.red })
vim.api.nvim_set_hl(0, "@comment.todo", { fg = colors.pink })
vim.api.nvim_set_hl(0, "@comment.note", { fg = colors.pink })
vim.api.nvim_set_hl(0, "@markup.strong", { bold = true })
vim.api.nvim_set_hl(0, "@markup.italic", { italic = true })
vim.api.nvim_set_hl(0, "@markup.strikethrough", { strikethrough = true })
vim.api.nvim_set_hl(0, "@markup.underline", { underline = true })
vim.api.nvim_set_hl(0, "@markup.heading", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.heading.1", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.heading.2", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.heading.3", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.heading.4", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.heading.5", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.heading.6", { fg = colors.yellow, bold = true })
vim.api.nvim_set_hl(0, "@markup.quote", { fg = colors.grey, italic = true })
vim.api.nvim_set_hl(0, "@markup.math", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "@markup.link", { fg = colors.white })
vim.api.nvim_set_hl(0, "@markup.link.label", { fg = colors.white })
vim.api.nvim_set_hl(0, "@markup.link.url", { fg = colors.blue, underline = true })
vim.api.nvim_set_hl(0, "@markup.raw", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "@markup.raw.block", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "@markup.list", { fg = colors.white })
vim.api.nvim_set_hl(0, "@markup.list.checked", { fg = colors.white })
vim.api.nvim_set_hl(0, "@markup.list.unchecked", { fg = colors.white })
vim.api.nvim_set_hl(0, "@diff.plus", { fg = colors.glowing_green })
vim.api.nvim_set_hl(0, "@diff.minus", { fg = colors.glowing_red })
vim.api.nvim_set_hl(0, "@diff.delta", { fg = colors.glowing_blue })
vim.api.nvim_set_hl(0, "@tag", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@tag.builtin", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "@tag.attribute", { fg = colors.white })
vim.api.nvim_set_hl(0, "@tag.delimiter", { fg = colors.white })

-- Language highlight groups.

-- Neovim base highlight groups.
vim.api.nvim_set_hl(0, "Normal", { fg = colors.white, bg=colors.bg })
vim.api.nvim_set_hl(0, "Comment", { fg = colors.grey })
vim.api.nvim_set_hl(0, "Constant", { fg = colors.white })
vim.api.nvim_set_hl(0, "String", { fg = colors.green })
vim.api.nvim_set_hl(0, "Character", { fg = colors.green })
vim.api.nvim_set_hl(0, "Number", { fg = colors.orange })
vim.api.nvim_set_hl(0, "Boolean", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Float", { fg = colors.orange })
vim.api.nvim_set_hl(0, "Identifier", { fg = colors.white })
vim.api.nvim_set_hl(0, "Function", { fg = colors.white })
vim.api.nvim_set_hl(0, "Statement", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Conditional", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Repeat", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Label", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Operator", { fg = colors.white })
vim.api.nvim_set_hl(0, "Keyword", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Exception", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "PreProc", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Include", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Define", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "PreCondit", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Type", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "StorageClass", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Structure", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Typedef", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Special", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "SpecialChar", { fg = colors.light_grey })
vim.api.nvim_set_hl(0, "Tag", { fg = colors.yellow })
vim.api.nvim_set_hl(0, "Delimiter", { fg = colors.white })
vim.api.nvim_set_hl(0, "SpecialComment", { fg = colors.pink })
vim.api.nvim_set_hl(0, "Debug", { fg = colors.white })
vim.api.nvim_set_hl(0, "Underlined", { fg = colors.blue })
vim.api.nvim_set_hl(0, "Ignore", { fg = colors.white })
vim.api.nvim_set_hl(0, "Error", { fg = colors.red })
vim.api.nvim_set_hl(0, "Todo", { fg = colors.pink })
vim.api.nvim_set_hl(0, "Added", { fg = colors.glowing_green })
vim.api.nvim_set_hl(0, "Changed", { fg = colors.glowing_blue })
vim.api.nvim_set_hl(0, "Removed", { fg = colors.glowing_red })
